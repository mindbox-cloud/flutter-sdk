name: SDK publish

on:
  workflow_call:
    inputs:
      branch:
        required: true
        type: string

jobs:
  analyze_and_test:
    name: Analyze code and run tests before publishing
    uses: ./.github/workflows/analyze_and_test.yml
    with:
      branch: ${{ inputs.branch }}
    secrets: inherit

  platform_interface_publish:
    needs: [analyze_and_test]
    timeout-minutes: 4
    runs-on: ubuntu-latest
    name: mindbox_platform_interface publishing
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ inputs.branch }}
      - name: Check package Pubspec
        id: pubspec
        run: |
          set +e
          git diff-tree --no-commit-id --name-only -r HEAD~1 ${{ github.sha }} | grep 'mindbox_platform_interface/pubspec.yaml'
          echo ::set-output name=changed::$?
          set -e
      - name: Extract package version
        if: steps.pubspec.outputs.changed == 0
        run: |
          cd mindbox_platform_interface
          echo "VERSION=$(awk '{if ($1 ~ /^version:/) print $2}' pubspec.yaml)" >> $GITHUB_ENV
      - uses: sakebook/actions-flutter-pub-publisher@v1.3.1
        if: steps.pubspec.outputs.changed == 0
        with:
          package_directory: mindbox_platform_interface
          credential: ${{ secrets.PUB_CREDENTIALS }}
          flutter_package: true
          skip_test: true
      - name: Create Release
        if: steps.pubspec.outputs.changed == 0
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: mindbox_platform_interface-v${{ env.VERSION }}
          release_name: mindbox_platform_interface v${{ env.VERSION }}
          draft: false
          prerelease: false
          
  waiting-while-platform-interface-publish:
    needs: [platform_interface_publish]
    runs-on: ubuntu-latest
    steps:
      - name: Delay for 10 minutes
        run: sleep 600

  native_components_publish:
    needs: [analyze_and_test, platform_interface_publish, waiting-while-platform-interface-publish]
    timeout-minutes: 4
    runs-on: ubuntu-latest
    name: ${{ matrix.package }} publishing
    strategy:
      matrix:
        package:
          - 'mindbox_android'
          - 'mindbox_ios'
      fail-fast: false

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ inputs.branch }}
      - name: Check package Pubspec
        id: pubspec
        run: |
          set +e
          git diff-tree --no-commit-id --name-only -r HEAD~1 ${{ github.sha }} | grep '${{ matrix.package }}/pubspec.yaml'
          echo ::set-output name=changed::$?
          set -e
      - name: Extract package version
        if: steps.pubspec.outputs.changed == 0
        run: |
          cd ${{ matrix.package }}
          echo "VERSION=$(awk '{if ($1 ~ /^version:/) print $2}' pubspec.yaml)" >> $GITHUB_ENV
      - uses: sakebook/actions-flutter-pub-publisher@v1.3.1
        if: steps.pubspec.outputs.changed == 0
        with:
          package_directory: ${{ matrix.package }}
          credential: ${{ secrets.PUB_CREDENTIALS }}
          flutter_package: true
          skip_test: true
      - name: Create Release
        if: steps.pubspec.outputs.changed == 0
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ matrix.package }}-v${{ env.VERSION }}
          release_name: ${{ matrix.package }} v${{ env.VERSION }}
          draft: false
          prerelease: false
          
  waiting-while-native_components_publish:
    needs: [native_components_publish]
    runs-on: ubuntu-latest
    steps:
      - name: Delay for 10 minutes
        run: sleep 600

  plugin_publish:
    needs: [analyze_and_test, platform_interface_publish, native_components_publish, waiting-while-native_components_publish]
    timeout-minutes: 4
    runs-on: ubuntu-latest
    name: mindbox publishing
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          ref: ${{ inputs.branch }}
      - name: Check package Pubspec
        id: pubspec
        run: |
          set +e
          git diff-tree --no-commit-id --name-only -r HEAD~1 ${{ github.sha }} | grep 'mindbox/pubspec.yaml'
          echo ::set-output name=changed::$?
          set -e
      - name: Extract package version
        if: steps.pubspec.outputs.changed == 0
        run: |
          cd mindbox
          echo "VERSION=$(awk '{if ($1 ~ /^version:/) print $2}' pubspec.yaml)" >> $GITHUB_ENV
      - uses: sakebook/actions-flutter-pub-publisher@v1.3.1
        if: steps.pubspec.outputs.changed == 0
        with:
          package_directory: mindbox
          credential: ${{ secrets.PUB_CREDENTIALS }}
          flutter_package: true
          skip_test: true
          dry_run: false
      - name: Create Release
        if: steps.pubspec.outputs.changed == 0
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: mindbox-v${{ env.VERSION }}
          release_name: mindbox v${{ env.VERSION }}
          draft: false
          prerelease: false

  merge:
    needs: [plugin_publish]
    if: |
      startsWith(github.head_ref, 'release') && 
      github.base_ref == 'master'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.PAT_FOR_TRIGGERING_BRANCH_PROTECTION }}
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
      - name: Create Pull Request
        run: gh pr create --base develop --head master --title "Merge 'master' into 'develop' after release" --body "Automated Pull Request to merge 'master' into 'develop' after release"
      - name: Merge Pull Request
        run: |
          pr_number=$(gh pr list --base develop --head master --json number --jq '.[0].number')
          gh pr merge $pr_number --merge --auto

  message-to-loop-if-success:
    needs: [plugin_publish]
    runs-on: ubuntu-latest
    steps:
      - name: Send message to LOOP
        env:
          LOOP_NOTIFICATION_WEBHOOK_URL: ${{ secrets.LOOP_NOTIFICATION_WEBHOOK_URL }}
          VERSION: ${{ inputs.branch }}
        run: |
          MESSAGE=$(cat <<EOF
          {
            "text": "**ðŸ¤– Flutter release was successful. Version: ${VERSION}**"
          }
          EOF)
          curl -X POST "$LOOP_NOTIFICATION_WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "$MESSAGE"
